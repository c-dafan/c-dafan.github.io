<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我的笔记</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zsdf.shop/"/>
  <updated>2019-04-09T06:30:09.283Z</updated>
  <id>http://zsdf.shop/</id>
  
  <author>
    <name>da fan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GoNote</title>
    <link href="http://zsdf.shop/04/09/GoNote/"/>
    <id>http://zsdf.shop/04/09/GoNote/</id>
    <published>2019-04-09T05:26:50.000Z</published>
    <updated>2019-04-09T06:30:09.283Z</updated>
    
    <content type="html"><![CDATA[<h1 id="golang你好"><a href="#golang你好" class="headerlink" title="golang你好"></a>golang你好</h1><h2 id="函数类型-匿名函数"><a href="#函数类型-匿名函数" class="headerlink" title="函数类型 匿名函数"></a>函数类型 匿名函数</h2><p>go 函数也是一种类型，用于声明变量，接收变量值</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></div><div class="line"><span class="keyword">type</span> myFunc <span class="function"><span class="keyword">func</span><span class="params">(a <span class="keyword">int</span>, b <span class="keyword">int</span>)</span> <span class="title">int</span></span></div><div class="line"><span class="title">func</span> <span class="title">main</span><span class="params">()</span>&#123;</div><div class="line">    <span class="keyword">var</span> myfunc myFunc</div><div class="line">    myfunc = <span class="function"><span class="keyword">func</span><span class="params">(a <span class="keyword">int</span>, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</div><div class="line">        <span class="keyword">return</span> a+b</div><div class="line">    &#125;</div><div class="line">    fmt.Println(myfunc(<span class="number">1</span>,<span class="number">2</span>))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h2><p>把函数当作一个参数</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> myFunc <span class="function"><span class="keyword">func</span><span class="params">(a <span class="keyword">int</span>, b <span class="keyword">int</span>)</span> <span class="title">int</span></span></div><div class="line"></div><div class="line"><span class="title">func</span> <span class="title">calu</span><span class="params">(a <span class="keyword">int</span>, b <span class="keyword">int</span>, myfunc myFunc)</span> <span class="title">int</span> &#123;</div><div class="line">    <span class="keyword">return</span> myfunc(a, b)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">var</span> myfunc myFunc</div><div class="line">    myfunc = <span class="function"><span class="keyword">func</span><span class="params">(a <span class="keyword">int</span>, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</div><div class="line">        <span class="keyword">return</span> a+b</div><div class="line">    &#125;</div><div class="line">    fmt.Println(calu(<span class="number">1</span>,<span class="number">2</span>, myfunc))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2><p>闭包中变量，一直存在</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">test02</span><span class="params">()</span> <span class="title">func</span><span class="params">()</span> <span class="title">int</span></span>&#123;</div><div class="line">    vv := <span class="number">1</span></div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">int</span></span>&#123;</div><div class="line">        vv++</div><div class="line">    <span class="keyword">return</span> vv </div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    f := test02()</div><div class="line">    fmt.Println(f())</div><div class="line">    fmt.Println(f())</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="匿名导入"><a href="#匿名导入" class="headerlink" title="匿名导入"></a>匿名导入</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> _ <span class="string">"fmt"</span></div></pre></td></tr></table></figure>
<p>执行init函数</p>
<h2 id="匿名字段"><a href="#匿名字段" class="headerlink" title="匿名字段"></a>匿名字段</h2><p>继承</p>
<h3 id="定义与初始化"><a href="#定义与初始化" class="headerlink" title="定义与初始化"></a>定义与初始化</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">type</span> people <span class="keyword">struct</span>&#123;</div><div class="line">    name <span class="keyword">string</span></div><div class="line">    age <span class="keyword">int</span></div><div class="line">    sex <span class="keyword">byte</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">type</span> student <span class="keyword">struct</span>&#123;</div><div class="line">    people</div><div class="line">    id <span class="keyword">int</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</div><div class="line">    s := student&#123;people&#123;<span class="string">"aa"</span>,<span class="number">16</span>,<span class="string">'m'</span>&#125;,<span class="number">150706</span>&#125;</div><div class="line">    fmt.Println(s)</div><div class="line">    s2 := student&#123;people:people&#123;name:<span class="string">"bb"</span>&#125;    id:<span class="number">160706</span>&#125;</div><div class="line">    fmt.Println(s2)</div><div class="line">    <span class="comment">// s3 := student&#123;"aa",16,'m',150706&#125; 错误用法</span></div><div class="line">    s4 := student&#123;&#125;</div><div class="line">    s4.id = <span class="number">170706</span></div><div class="line">    s4.name = <span class="string">"cc"</span></div><div class="line">    s4.age = <span class="number">17</span></div><div class="line">    s4.sex = <span class="string">'m'</span></div><div class="line">    fmt.Println(s4)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="非结构字段"><a href="#非结构字段" class="headerlink" title="非结构字段"></a>非结构字段</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">type</span> people <span class="keyword">struct</span>&#123;</div><div class="line">    name <span class="keyword">string</span></div><div class="line">    age <span class="keyword">int</span></div><div class="line">    sex <span class="keyword">byte</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">type</span> student <span class="keyword">struct</span>&#123;</div><div class="line">    people</div><div class="line">    <span class="keyword">int</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</div><div class="line">    s := student&#123;people&#123;<span class="string">"aa"</span>,<span class="number">16</span>,<span class="string">'m'</span>&#125;,<span class="number">150706</span>&#125;</div><div class="line">    fmt.Println(s)</div><div class="line">    s4 := student&#123;&#125;</div><div class="line">    s4.<span class="keyword">int</span> = <span class="number">170706</span></div><div class="line">    s4.name = <span class="string">"cc"</span></div><div class="line">    s4.age = <span class="number">17</span></div><div class="line">    s4.sex = <span class="string">'m'</span></div><div class="line">    fmt.Println(s4)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="同名字段"><a href="#同名字段" class="headerlink" title="同名字段"></a>同名字段</h3><p>就近原则</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h3 id="值与引用"><a href="#值与引用" class="headerlink" title="值与引用"></a>值与引用</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> people <span class="keyword">struct</span>&#123;</div><div class="line">    name <span class="keyword">string</span></div><div class="line">    age <span class="keyword">int</span></div><div class="line">    sex <span class="keyword">byte</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *people)</span> <span class="title">setinfoPointer</span><span class="params">()</span></span>&#123;</div><div class="line">    this.name = <span class="string">"a"</span></div><div class="line">    this.age = <span class="number">12</span></div><div class="line">    this.sex = <span class="string">'m'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this people)</span> <span class="title">setinfo</span><span class="params">()</span></span>&#123;</div><div class="line">    this.name = <span class="string">"a"</span></div><div class="line">    this.age = <span class="number">12</span></div><div class="line">    this.sex = <span class="string">'m'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</div><div class="line">    p := people&#123;&#125;</div><div class="line">    p.setinfo() <span class="comment">// 无效</span></div><div class="line">    fmt.Println(p)</div><div class="line">    p.setinfoPointer()</div><div class="line">    fmt.Println(p)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><h3 id="空接口-类型断言"><a href="#空接口-类型断言" class="headerlink" title="空接口 类型断言"></a>空接口 类型断言</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> people <span class="keyword">struct</span>&#123;</div><div class="line">    name <span class="keyword">string</span></div><div class="line">    age <span class="keyword">int</span></div><div class="line">    sex <span class="keyword">byte</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</div><div class="line">    ii := <span class="built_in">make</span>([]<span class="keyword">interface</span>&#123;&#125;, <span class="number">3</span>)</div><div class="line">    ii[<span class="number">0</span>] = <span class="number">1</span></div><div class="line">    ii[<span class="number">1</span>] = <span class="string">"2"</span></div><div class="line">    ii[<span class="number">2</span>] = people&#123;name:<span class="string">"3"</span>&#125;</div><div class="line">    <span class="keyword">for</span> _,d := <span class="keyword">range</span> ii &#123;</div><div class="line">        <span class="keyword">if</span> val, ok:=d.(<span class="keyword">int</span>); ok&#123;</div><div class="line">            fmt.Println(<span class="string">"int"</span>,val)</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> val, ok:=d.(<span class="keyword">string</span>); ok&#123;</div><div class="line">            fmt.Println(<span class="string">"string"</span>,val)</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> val, ok:=d.(people); ok&#123;</div><div class="line">            fmt.Println(<span class="string">"people"</span>,val)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> _,d := <span class="keyword">range</span> ii &#123;</div><div class="line">        <span class="keyword">switch</span> value := d.(<span class="keyword">type</span>) &#123;</div><div class="line">        <span class="keyword">case</span> <span class="keyword">int</span>:</div><div class="line">            fmt.Println(<span class="string">"int"</span>,value)</div><div class="line">        <span class="keyword">case</span> <span class="keyword">string</span>:</div><div class="line">            fmt.Println(<span class="string">"string"</span>,value)</div><div class="line">        <span class="keyword">case</span> people:</div><div class="line">            fmt.Println(<span class="string">"people"</span>,value)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;golang你好&quot;&gt;&lt;a href=&quot;#golang你好&quot; class=&quot;headerlink&quot; title=&quot;golang你好&quot;&gt;&lt;/a&gt;golang你好&lt;/h1&gt;&lt;h2 id=&quot;函数类型-匿名函数&quot;&gt;&lt;a href=&quot;#函数类型-匿名函数&quot; class=&quot;he
    
    </summary>
    
      <category term="go" scheme="http://zsdf.shop/categories/go/"/>
    
    
      <category term="go" scheme="http://zsdf.shop/tags/go/"/>
    
      <category term="note" scheme="http://zsdf.shop/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>面试准备</title>
    <link href="http://zsdf.shop/04/07/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/"/>
    <id>http://zsdf.shop/04/07/面试准备/</id>
    <published>2019-04-07T06:22:33.000Z</published>
    <updated>2019-04-08T14:00:23.923Z</updated>
    
    <content type="html"><![CDATA[<h1 id="面试前准备"><a href="#面试前准备" class="headerlink" title="面试前准备"></a>面试前准备</h1><hr>
<h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><p><a href="https://github.com/kenwoodjw/python_interview_question" target="_blank" rel="external">python面试题</a></p>
<h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><p><a href="https://github.com/guanzhenxing/java_interview_manual" target="_blank" rel="external">java面试题</a></p>
<h2 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h2><p><a href="http://www.runoob.com/redis/redis-tutorial.html" target="_blank" rel="external">redis入门</a></p>
<h2 id="rabbitmq"><a href="#rabbitmq" class="headerlink" title="rabbitmq"></a>rabbitmq</h2><p><a href="https://www.cnblogs.com/shenyixin/p/9084249.html" target="_blank" rel="external">rabbitmq复习</a></p>
<p><a href="https://www.cnblogs.com/frankyou/p/5283539.html" target="_blank" rel="external">rabbitmq复习</a></p>
<h2 id="springboot"><a href="#springboot" class="headerlink" title="springboot"></a>springboot</h2><p><a href="https://blog.csdn.net/zl1zl2zl3/article/details/83715633" target="_blank" rel="external">springboot</a><br><a href="https://www.cnblogs.com/3xmq/p/springboot.html" target="_blank" rel="external">springboot</a></p>
<h2 id="go"><a href="#go" class="headerlink" title="go"></a>go</h2><p><a href="https://blog.csdn.net/itcastcpp/article/details/80462619" target="_blank" rel="external">golang</a></p>
<p><a href="http://www.imooc.com/article/264183" target="_blank" rel="external">go</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;面试前准备&quot;&gt;&lt;a href=&quot;#面试前准备&quot; class=&quot;headerlink&quot; title=&quot;面试前准备&quot;&gt;&lt;/a&gt;面试前准备&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;python&quot;&gt;&lt;a href=&quot;#python&quot; class=&quot;headerlink&quot; tit
    
    </summary>
    
      <category term="面试" scheme="http://zsdf.shop/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="python" scheme="http://zsdf.shop/tags/python/"/>
    
      <category term="java" scheme="http://zsdf.shop/tags/java/"/>
    
      <category term="redis" scheme="http://zsdf.shop/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>shop_go_vue</title>
    <link href="http://zsdf.shop/04/05/shop-go-vue/"/>
    <id>http://zsdf.shop/04/05/shop-go-vue/</id>
    <published>2019-04-05T02:44:58.000Z</published>
    <updated>2019-04-06T04:42:53.095Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一个购物网站总结"><a href="#一个购物网站总结" class="headerlink" title="一个购物网站总结"></a>一个购物网站总结</h1><p>一个购物网站，数据库设计如下：<br><img src="https://raw.githubusercontent.com/c-dafan/Shop_GoVueWeb/master/shop/static/shop.png" alt="数据库"></p>
<p>前端nodejs + vue-cli + Vue + Element-UI</p>
<h2 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h2><p>采用element-UI组件。记录一下体验：</p>
<pre><code>vue整体体验很好，通过router和router-view可以很好的提高前端布局代码的复用性。对我这种不擅长写前端，每次写前端ctrl+c，ctrl+v的真的是非常的友好。另外，数据的绑定、一些指令也是相当的好用
使用vue-cli工具，需要借助nodejs，可以实现前后端的分离。在vue-cli的工程上，目录结构很清晰，很容易写一个前端。不过需要一些nodejs的知识，不然学起来真的很难受。
element-UI组件很好使用，不用懂很多css也能写出来很漂亮页面，有种纯写html最后得到带css效果的页面。
</code></pre><p>笔记：</p>
<blockquote>
<p>父子组件通信</p>
</blockquote>
<ul>
<li><p>v-model 数据双向绑定</p>
</li>
<li><p>v-on （@）事件</p>
</li>
<li><p>v-bind （:） 数据单向绑定</p>
</li>
</ul>
<blockquote>
<p>内置指令</p>
</blockquote>
<ul>
<li><p>v-if、v-else、v-else-if 条件</p>
</li>
<li><p>v-for 循环 （o, i） in objs 其中i是索引，这个顺序好像和我见过的大部分语言相反</p>
</li>
</ul>
<blockquote>
<p>函数</p>
</blockquote>
<ul>
<li><p>created</p>
</li>
<li><p>watch 一直观察这个变量</p>
</li>
<li><p>computed 一个变量通过函数结算出来</p>
</li>
</ul>
<blockquote>
<p>slot、props、scope</p>
</blockquote>
<ul>
<li><p>slot 插槽</p>
</li>
<li><p>scope</p>
</li>
<li><p>props</p>
</li>
</ul>
<h2 id="beego"><a href="#beego" class="headerlink" title="beego"></a>beego</h2><p>beego体验：</p>
<pre><code>beego从入门到放弃，没有重新运行解决不了的问题，beego基于mvc三层的一个框架，只要学过其他语言的WEB，入手还是很容易的。
学习go语言一天，入手beego，本着练习go语言的原则，写了这个项目。
beego有个bee工具，使用起来很容易。bee generate 几乎直接把真的网站的代码都写完了，需要改一些逻辑。生成的controller中GetAll也太恨了，把整个数据库的信息可以按照任意条件都能查询到。
</code></pre><p>项目中遇到的问题：</p>
<pre><code>通过注释配url，这个不知道是我的问题，还是beego的问题。配好的url，第一次不起作用，需要把进程关了，然后重新运行。第一次运行会生成一个文件，但是进入url会404，第二次运行就没问题。
beego的orm也很用，很简单的就能和数据库映射。查询外键中的对象很可以查询到，不过一旦用了外键，外键对应的就成为了一个结构体，在发post等请求时，传外键Id时，需要多写一个{}。
</code></pre><p>beego笔记：</p>
<blockquote>
<p>bee</p>
</blockquote>
<pre><code>generate    生成代码
new         创建
pack        打包
run         运行
</code></pre><blockquote>
<p>orm</p>
</blockquote>
<ul>
<li><p>qs.RelatedSel() 加载外键</p>
<pre><code>参数：要加载的外键名字，多层的话，可以使用__
</code></pre></li>
<li><p>qs.Limit(limit, offset)</p>
</li>
<li><p>struct</p>
</li>
</ul>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> Address <span class="keyword">struct</span> &#123;</div><div class="line">	Id             <span class="keyword">int</span>    <span class="string">`orm:"column(aid);auto"`</span></div><div class="line">	Uid            *User  <span class="string">`orm:"column(uid);null;rel(fk)"`</span></div><div class="line">&#125;</div><div class="line"><span class="comment">// auto自增、</span></div><div class="line"><span class="comment">// null可以为空、默认为非空、</span></div><div class="line"><span class="comment">// auto_now_add;type(datetime) 自动放到当时时间</span></div><div class="line"><span class="comment">// auto_now;type(datetime) 自动放到当时时间</span></div><div class="line"><span class="comment">// 区别auto_now_add第一次添加的时间，更新时间不变，auto_now每次更新时间改变</span></div></pre></td></tr></table></figure>
<blockquote>
<p>Controller</p>
</blockquote>
<ul>
<li><p>router</p>
</li>
<li><p>ServeJSON</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一个购物网站总结&quot;&gt;&lt;a href=&quot;#一个购物网站总结&quot; class=&quot;headerlink&quot; title=&quot;一个购物网站总结&quot;&gt;&lt;/a&gt;一个购物网站总结&lt;/h1&gt;&lt;p&gt;一个购物网站，数据库设计如下：&lt;br&gt;&lt;img src=&quot;https://raw.githu
    
    </summary>
    
      <category term="Web" scheme="http://zsdf.shop/categories/Web/"/>
    
    
      <category term="go" scheme="http://zsdf.shop/tags/go/"/>
    
      <category term="vue" scheme="http://zsdf.shop/tags/vue/"/>
    
      <category term="beego" scheme="http://zsdf.shop/tags/beego/"/>
    
  </entry>
  
  <entry>
    <title>hello world</title>
    <link href="http://zsdf.shop/04/25/hello/"/>
    <id>http://zsdf.shop/04/25/hello/</id>
    <published>2017-04-25T11:12:19.000Z</published>
    <updated>2019-04-06T02:45:07.782Z</updated>
    
    <content type="html"><![CDATA[<h1 id="博客笔记"><a href="#博客笔记" class="headerlink" title="博客笔记"></a>博客笔记</h1><hr>
<p>自2017年搭建好，再也没用过，两年后的现在<br>重拾博客</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;博客笔记&quot;&gt;&lt;a href=&quot;#博客笔记&quot; class=&quot;headerlink&quot; title=&quot;博客笔记&quot;&gt;&lt;/a&gt;博客笔记&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;自2017年搭建好，再也没用过，两年后的现在&lt;br&gt;重拾博客&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
</feed>
